---
- name: Configure Dnsmasq to act as a DHCP and DNS server
  when: cobbler_dnsmasq_module
  block:
    - name: Install dnsmasq
      ansible.builtin.package:
        name:
          - dnsmasq

    - name: Configure dhcp-range in dnsmasq.template
      ansible.builtin.lineinfile:
        path: /etc/cobbler/dnsmasq.template
        regexp: '^dhcp-range='
        line: "dhcp-range={{ cobbler_dnsmasq_dhcp_range }}"
      when: cobbler_dnsmasq_dhcp_range is defined
      notify: Restart cobbler

    - name: Configure dhcp-options in dnsmasq.template
      ansible.builtin.lineinfile:
        path: /etc/cobbler/dnsmasq.template
        regexp: "^dhcp-option={{ item.0 }},"
        line: "dhcp-option={{ item.0 }},{{ item.1 }}"
      loop: "{{ cobbler_dnsmasq_dhcp_options }}"
      when: cobbler_dnsmasq_dhcp_options is defined
      notify: Restart cobbler

    - name: Add support for UEFI in dnsmasq.template
      ansible.builtin.lineinfile:
        path: /etc/cobbler/dnsmasq.template
        insertbefore: "^dhcp-boot=pxelinux.0"
        line: "{{ item }}"
      loop:
        - "dhcp-vendorclass=UEFI,PXEClient:Arch:00007"
        - "dhcp-vendorclass=UEFI,PXEClient:Arch:00009"
        - "dhcp-boot=net:UEFI,grub/grubx86.efi"
      notify: Restart cobbler

    - name: Enable dnsmasq in modules
      community.general.ini_file:
        path: /etc/cobbler/modules.conf
        section: "{{ item }}"
        option: module
        value: managers.dnsmasq
        owner: root
        group: root
        mode: '0600'
      loop: ['dns', 'dhcp']
      notify: Restart cobbler

    - name: Add dnsmasq options to dnsmasq.template
      ansible.builtin.blockinfile:
        path: /etc/cobbler/dnsmasq.template
        block: "{{ cobbler_dnsmasq_options }}"
        insertbefore: "^read-ethers"
        marker: "### {mark} Ansible Managed Block - cobbler_dnsmasq_options ###"
      when: cobbler_dnsmasq_options is defined
      notify: Restart cobbler
